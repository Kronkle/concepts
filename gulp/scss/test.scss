/* 
*  Sass is a CSS preprocessor with features to help manage large stylesheets.
*  There are two ways to write Sass: traditional Sass syntax and SCSS (Sassy CSS).
*  This file is written using SCSS, which uses brackets and semicolons similar to 
*  traditional CSS syntax.  
*/

$lucida: "Lucida Console", Monaco, monospace;
$impact: Impact, Charcoal, sans-serif;
$aqua: #001f3f;
$green: #2ECC40;
$yellow: #FFDC00;
$blue: #0074D9;
$orange: #FF851B;

/* Sass supports variables just like a traditional programming language */
p {
	font-family: $lucida;
	color: $aqua;
}

/* Sass allows nesting CSS selectors, although too much nesting is considered bad practice */
ul {	
		#green {
			background-color: $green;
		}

		#yellow {
			background-color: $yellow;
		}

		#blue {
			background-color: $blue;
			p {
				color: $orange;
			}

		}	
}

/* Sass allows you to import "partial" Sass files for greater file modularity */

/* Mixins behave like arrays of css rules and are utilized most effectively when you call them with variable arguments */
@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	border-radius: $radius;
}

/* Call a mixin with @include */
.bordered { 
	border: 2px solid;
	@include border-radius(5px); 
}

/* When arguments don't need to be applied to a block of css rules, use extension/inheritance */
.msg-header {
	font-family: $impact;
	color: $aqua;
}

.msg-child {
	@extend .msg-header;
	color: $green;
}